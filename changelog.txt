=== 0.0.4 - 18/09/2020 ===

[ Curtis Holt ]
- Fixed creating primitives return types.
- Importing Euler class for rotations.
- + set_render_engine_cycles con-func.
- + set_render_engine_eevee con-func.
- + set_frame con-func to current_frame(val).
- + get_render_resolution to get render resolution.
- + get_render_resolution_percentage to get render res percentage.
- + render_resolution as a getter and setter.
- + set_render_percentage con-func.
- + set_render_percent con_func.
- = get_render_pixel_aspect_ratio to get aspect ratio for render.
- + render_aspect_ratio as a getter and setter.
- + render_resolution_percentage as a getter and setter.
- Created a new section 'ORIGINS' for origin functions.
- + set_geometry_to_origin
- + geometry_to_origin
- + set_origin_to_geometry
- + origin_to_geometry
- + set_origin_to_cursor
- + origin_to_cursor
- + set_origin_to_centermass_surface
- + origin_to_centermass_surface
- + set_origin_to_centermass_volume
- + origin_to_centermass_volume

[ JYoshi ]
- create_modifier force redraw of interface.
- remove_modifier force redraw of interface.
- Added default values for 'modname' argument in every specific modifier function.

[ 3D_Bubble ]
- + reverse_rotation_on_euler
- C Note: For the render functions below, I have created a new
          category: RENDER SETTINGS, which comes before OBJECTS.
- + set_render_engine_to_cycles
- + set_render_engine_to_eevee
- + render_image
- + render_animation
- + set_render_resolution
- + set_render_resolution_percentage
- + set_render_pixel_aspect_ratio
- + current_frame
- + frame_start
- + frame_end
- + set_current_frame
- + set_frame_start
- + set_frame_end
- + set_start_frame
- + set_end_frame
- + set_frame_interval
- + set_frame_step
- + set_render_fps
    C Note: Base argument was not used, fixed.
- C Note: For applying transforms below, I added consideration for
          passing an object ref argument.
- + apply_location
- + apply_rotataion
- + apply_scale
- + apply_all_transforms
- + apply_rotation_and_scale
- + scale_along_global_axis used by scale_along_global functions.

=== 0.0.3 - 15/09/2020 ===
[ Curtis Holt ]
- + get_materials con-func (get_materials_from_object).

[ 3D_Bubble ]
- get_collection added .collection after .active_layer_collection
- get_active_collection same change as above.
- set_active_collection fixed and included.
- get_object supports no arguments to return selected object.
- + get_scene
    C Note: I've put this in a new category (SCENES)
- + set_pivot_point_to_cursor
    C Note: I've put this in a new category (PIVOT POINT)
- + set_pivot_point_to_median
- + set_pivot_point_to_individual_origins
- + set_pivot_point_to_active_elSement
- + set_pivot_point_to_bounding_box_center
- + translate_along_axis
- + translate_along_x
- + translate_along_y
- + translate_along_z
- + translate_along_global_x
- + translate_along_global_y
- + translate_along_global_z
- + translate_along_local_x
- + translate_along_local_y
- + translate_along_local_z
- + rotate_vector
- + rotate_around_axis
- + rotate_around_global_x
- + rotate_around_global_y
- + rotate_around_global_z
- + rotate_around_x
- + rotate_around_y
- + rotate_around_z
- + rotate_around_local_x
- + rotate_around_local_y
- + rotate_around_local_z
- + scale_vector
- + scale_uniform
- + scale_along_axis
- + scale_along_x
- + scale_along_y
- + scale_along_z
- + scale_along_local_x
- + scale_along_local_y
- + scale_along_local_z
- + scale_along_global_x
- + scale_along_global_y
- + scale_along_global_z
- + scale_perpendicular_to_x
- + scale_perpendicular_to_y
- + scale_perpendicular_to_z

=== 0.0.2 - 14/09/2020 ===
[ Curtis Holt ]
- + get_all_objects
- + get_list_of_objects
- + create_texture
- + get_texture
- + get_all_textures
- + get_list_of_textures
- + rename_texture
- + delete_texture
- + get_all_collections

[ 3D_Bubble ]
- create_object now works without collection reference (uses active).
- copy_object now works without a collection reference (uses active).
- select_all_objects now allows collection argument to choose objects in a specific collection.
- + hide_object for hiding object (same as pressing 'H')
    C Note: I've also changed this to hide the selected object if no argument given.
- + show_object for showing hidden object (like 'Alt+H', but for single object)
    C Note: Like before, added selected object support.
- + hide con-func.
- + show con-func.
- + unhide con-func.
- + unhide_object con-func.
- + unhide_in_viewport con-func.
- + unhide_in_render con-func.
- get_cursor_location fix.
- set_cursor_location fix.
- + get_cursor_rotation
- + get_cursor_rotation_mode
- delete_collection delete_object argument fix.
- delete_hierarchy now recursive to delete child collections
    C Note: Needed to add an isinstance check for the collection type in children.
- get_collection will return active if no argument provided.
- get_col adjusted to return selected when calling get_collection
- + get_active_collection
- + set_active_collection 
    C Note: String check was missing, added.
- + set_active_collection - REQUIRES FIXING

[ JYoshi ]
- Converting != to 'is not' where appropriate.